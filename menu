#!/bin/bash

set -e

RED='\033[0;41;30m'
STD='\033[0;0;39m'
_VERSION='0.4'
_SOURCE='star-morbius'
 
pause(){
  read -p "Press [Enter] key to continue..." fackEnterKey
}

function prompt {
	echo
    if [[ -z $2 || ${2^} = Y* ]]; then
        prompt='Y/n'
        default='Y'
    elif [[ ${2^} = N* ]]; then
        prompt='y/N'
        default='N'
    fi
    
	while true; do
		read -p "$1 [$prompt] " ans
		
		if [[ -z $ans ]]; then
			ans=$default
        fi
        
		if [[ ${ans^} = Y* ]]; then
			echo
			return 0
		elif [[ ${ans^} = N* ]]; then
			echo
			return 1
		fi
	done
}

build(){
	
	cd $1
	sudo x-terminal-emulator -e './build'
	# sudo xfce-terminal -e './build'
	# ./build
	
	cd ..	
	
}

removeprompt(){

	if prompt "  Remove '$1'?"; then
		remove $1
	fi	

}

remove(){

 	if [ -d "$1" ]; then
		purge $1
		sudo rm -rf $1
	fi

}

purgeprompt(){

	if prompt "  Purge '$1'?"; then
		purge $1
	fi
}

purge(){

	if [ -d "$1" ]; then
		cd $1
		sudo lb clean --purge
		cd ..
	fi

}

setup(){
	
	if prompt "  Setup '$1'?"; then
		remove $1
	fi	

	sudo mkdir $1 && cd $1 && sudo lb config
	sudo cp /usr/share/doc/live-build/examples/auto/* auto/

	if [ ! -f "./build" ]; then
		cd ..
		sudo cp ./buildx ./$1/build
	fi
	
	# uncomment pause to see messages
	#pause
}

update(){
	#echo $PWD
#	echo "-Parameter #1 is \"$1\".-"
	cd $1
	#echo $PWD
		
	rm -rf ./auto/*
	cp -rf /home/$SUDO_USER/${_SOURCE}/common/auto/* ./auto/
	cd config

	if [ ! -d "bootloaders" ]; then
		mkdir bootloaders
	fi

	rm -rf ./apt/*
	rm -rf ./archives/*
	rm -rf ./hooks/*
	rm -rf ./includes.chroot/*
	rm -rf ./package-lists/*
	rm -rf ./includes.installer/*
	rm -rf ./binary_debian-installer
	rm -rf ./bootloaders/*
	rm -rf ./includes.binary/*
	rm -rf ./packages.chroot/* 

	if [ ! -d "./includes.binary/install" ]; then
		mkdir ./includes.binary/install
	fi

	cp -r /home/$SUDO_USER/${_SOURCE}/common/config/* ./

	cp -r /home/$SUDO_USER/${_SOURCE}/$1-64/config/hooks/* ./hooks/
	cp -r /home/$SUDO_USER/${_SOURCE}/$1-64/config/includes.chroot/* ./includes.chroot/
	cp /home/$SUDO_USER/${_SOURCE}/$1-64/config/package-lists/* ./package-lists/
	
	cp -r /home/$SUDO_USER/${_SOURCE}/$1-64/config/includes.chroot/* ./includes.chroot/
	cp /home/$SUDO_USER/${_SOURCE}/$1-64/config/package-lists/* ./package-lists/

	DIRECTORY="/home/$SUDO_USER/${_SOURCE}/$1-64/config/packages.chroot/"
	if [ "$(ls -A $DIRECTORY)" ]; then
		cp /home/$SUDO_USER/${_SOURCE}/$1-64/config/packages.chroot/* ./packages.chroot/
	fi

	# remove default .conkyrc
	if [ $1 == "i3" ]; then
		rm ./includes.chroot/etc/skel/.conkyrc
		rm -rf ./includes.chroot/etc/skel/.config/volumeicon
		
	fi
		
	#cp -r /home/$SUDO_USER/${_SOURCE}/custom/config/* ./
	
	sed -i -e 's/REPLACEME/'${_VERSION}'/g' ./includes.chroot/etc/hostname
	sed -i -e 's/REPLACEME/'${_VERSION}'/g' ./includes.chroot/etc/issue
	sed -i -e 's/REPLACEME/'${_VERSION}'/g' ./includes.chroot/etc/issue.net
	sed -i -e 's/REPLACEME/'${_VERSION}'/g' ./includes.chroot/etc/motd
	sed -i -e 's/REPLACEME/'${_VERSION}'/g' ./includes.chroot/etc/os-release
	#echo $PWD	
	cd ../..
	#echo $PWD
	
	#echo $1-"Updated"

	# uncomment pause to see messages
	#pause
}

main(){
	clear
	echo -e "\t~~~~~~~~~~~~~~~~~~~~~"	
	echo -e "\t M A I N - M E N U"
	echo -e "\t~~~~~~~~~~~~~~~~~~~~~"
	echo " "
	echo -e "\ts. Setup         x. Xfce"
	echo -e "\tr. Remove        f. Fluxbox"
	echo -e "\tu. Update        o. Openbox"
	echo -e "\tb. Build         j. Jwm"
	echo -e "\tp. Purge         i. i3"
	echo " "
	echo -e "\tExample - sx (Setup Xfce)"
	echo " "
	echo -e "\tq. Quit"
	echo " "
		
	local choice
	read -p "Enter choice or q : " choice

	case $choice in
		sx) setup "xfce" ;;
		sf) setup "fb" ;;
		so) setup "ob" ;;
		sj) setup "jwm" ;;
		si) setup "i3" ;;
		rx) removeprompt "xfce" ;;
		rf) removeprompt "fb" ;;
		ro) removeprompt "ob" ;;
		rj) removeprompt "jwm" ;;
		ri) removeprompt "i3" ;;
		ux) update "xfce" ${_VERSION} ;;
		uf) update "fb" ${_VERSION} ;;
		uo) update "ob" ${_VERSION} ;;
		uj) update "jwm" ${_VERSION} ;;
		ui) update "i3" ${_VERSION} ;;
		bx) build "xfce" ;;
		bf) build "fb" ;;
		bo) build "ob" ;;
		bj) build "jwm" ;;
		bi) build "i3" ;;
		px) purgeprompt "xfce" ;;
		pf) purgeprompt "fb" ;;
		po) purgeprompt "ob" ;;
		pj) purgeprompt "jwm" ;;
		pi) purgeprompt "i3" ;;
		q|Q) break;;
		*) echo -e "\tinvalid answer, please try again" ;;
	esac

}

# ----------------------------------------------
# Step #3: Trap CTRL+C, CTRL+Z and quit singles
# ----------------------------------------------
trap '' SIGINT SIGQUIT SIGTSTP

while true
do
	main
done

